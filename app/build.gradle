//file:noinspection HardCodedStringLiteral
apply plugin: 'com.android.application'

android {
    // setup SDK
    compileSdk Integer.valueOf(PARAM_COMPILE_SDK_VERSION)

    namespace "falcosc.locus.addon.tasker"

    buildFeatures {
        buildConfig = true
    }

    defaultConfig {
        minSdkVersion Integer.valueOf(PARAM_MIN_SDK_VERSION)
        targetSdkVersion Integer.valueOf(PARAM_TARGET_SDK_VERSION)
        versionCode 94
        versionName '1.8.0-SNAPSHOT'
        buildConfigField 'String', 'CONTACT_EMAIL', '"' + getContactEmail() + '"'
        buildConfigField 'String', 'ACTION_TASK_DOC_URL', '"' + PARAM_ACTION_TASK_DOC_URL + '"'
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8 //TODO update after resolving Package Permission issues
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled true //needed for shrinkResources
            shrinkResources true //saves 1,8mb of 3,8mb
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation "androidx.preference:preference:1.2.1"

    implementation("com.github.asamm:logger-asamm:[latest]")
    implementation 'com.asamm:locus-api-android:0.9.62'

    implementation 'com.twofortyfouram:android-plugin-api-for-locale:1.0.4'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'androidx.exifinterface:exifinterface:1.3.7'

    testImplementation 'org.testng:testng:7.4.0'
    testImplementation 'org.ow2.asm:asm-tree:9.2'
}

tasks.register('checkActionTaskDoc') {
    doLast {
        'git submodule update --remote'.execute().waitFor()

        final def currentRevision = 'git -C locus-api.wiki log -1 --format=%H -- "Action-tasks-(Broadcasts).md"'.execute().text.trim()

        if (currentRevision != PARAM_IMPL_ACTION_TASK_REV) {
            throw new GradleException("New ActionTasks got documented. Compare here:\n" +
                    "${PARAM_ACTION_TASK_DOC_URL}/_compare/${PARAM_IMPL_ACTION_TASK_REV}...${currentRevision}\n" +
                    "Implement docu changes in ActionTaskEdit and update PARAM_IMPL_ACTION_TASK_REV in gradle.properties")
        } else {
            println "ActionTaskEdit is up to date"
        }
    }
}

tasks.whenTaskAdded { final task ->
    if (task.name == 'preReleaseBuild') {
        task.dependsOn 'checkActionTaskDoc'
    }
}
